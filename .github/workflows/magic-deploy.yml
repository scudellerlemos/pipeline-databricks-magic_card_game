name: Deploy Databricks Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
  pull_request:
    branches: [ main ]
    paths:
      - '**'
 

env:
  DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
  DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Databricks
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        pip install databricks-cli pyyaml
        databricks --version
        
    - name: Configure Databricks CLI
      run: |
        echo "DATABRICKS_HOST=$DATABRICKS_HOST" >> $GITHUB_ENV
        echo "DATABRICKS_TOKEN=$DATABRICKS_TOKEN" >> $GITHUB_ENV
        
    - name: Validate YAML
      run: |
        python -c "import yaml; yaml.safe_load(open('.github/DAGs/magic.yml', 'r'))"
        echo "âœ… YAML validation passed"
        
    - name: Deploy to Databricks
      if: github.ref == 'refs/heads/main'
      run: |
        python .github/scripts/deploy.py
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        

        
    - name: Test deployment
      if: github.ref == 'refs/heads/main'
      run: |
        sleep 30
        databricks jobs list --output JSON | jq -r '.jobs[] | select(.settings.name == "MTG_PIPELINE") | "Job ID: \(.job_id), Status: \(.settings.schedule.pause_status)"'
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }} 
